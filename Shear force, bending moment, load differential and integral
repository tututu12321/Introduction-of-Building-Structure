import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import cumtrapz

# Load distribution (example: uniform load)
def load_distribution(x):
    return np.ones_like(x) * 10  # Example: uniform load of 10 N/m

# Calculate shear force (integrate the load)
def shear_force(x, w):
    # Integrate the load to get the shear force
    return cumtrapz(-w, x, initial=0)

# Calculate bending moment (integrate the shear force)
def bending_moment(x, V):
    # Integrate the shear force to get the bending moment
    return cumtrapz(V, x, initial=0)

# Main execution
if __name__ == "__main__":
    # Define the length of the beam
    L = 10  # Length of the beam (m)
    x_vals = np.linspace(0, L, 100)  # Dividing the beam into 100 points

    # Calculate the load distribution
    load_vals = load_distribution(x_vals)

    # Calculate the shear force
    shear_vals = shear_force(x_vals, load_vals)

    # Calculate the bending moment
    moment_vals = bending_moment(x_vals, shear_vals)

    # Plotting
    plt.figure(figsize=(12, 8))

    # Load distribution plot
    plt.subplot(3, 1, 1)
    plt.plot(x_vals, load_vals, label="Load (w)", color='green')
    plt.axhline(0, color='black', linewidth=0.5)
    plt.xlabel("Position (m)")
    plt.ylabel("Load (N/m)")
    plt.title("Load Distribution")
    plt.grid(True)
    plt.legend()

    # Shear Force Diagram (SFD)
    plt.subplot(3, 1, 2)
    plt.plot(x_vals, shear_vals, label="Shear Force (V)", color='blue')
    plt.axhline(0, color='black', linewidth=0.5)
    plt.xlabel("Position (m)")
    plt.ylabel("Shear Force (N)")
    plt.title("Shear Force Diagram (SFD)")
    plt.grid(True)
    plt.legend()

    # Bending Moment Diagram (BMD)
    plt.subplot(3, 1, 3)
    plt.plot(x_vals, moment_vals, label="Bending Moment (M)", color='red')
    plt.axhline(0, color='black', linewidth=0.5)
    plt.xlabel("Position (m)")
    plt.ylabel("Bending Moment (Nm)")
    plt.title("Bending Moment Diagram (BMD)")
    plt.grid(True)
    plt.legend()

    plt.tight_layout()
    plt.show()
